# Snakefile for basicQC NGS 
import pandas as pd

DESIGN_FILE = "../../ExperimentInfo/SampleInformation/seqdesign.txt"

PROJECT_DIR  = "../.."
RESULT_DIR   = os.path.join(PROJECT_DIR,"Results/basicQC")
FASTQ_STORE  = os.path.join(PROJECT_DIR,"Scratch/raw")
RUN_STORE    = "/zfs/genseq/rundata/data"

KNIT_BASE = "basicQC"
RMD_FILE = KNIT_BASE + ".Rmd"
MD_FILE = os.path.join(RESULT_DIR,KNIT_BASE + ".md")
HTML_FILE = os.path.join(RESULT_DIR,KNIT_BASE + ".html")

KNIT_FIGDIR = os.path.join(RESULT_DIR,"figure")
DIR_E = ".dexist"


#  get sample names from design file
if  not os.path.exists(DESIGN_FILE):
     sys.exit("Design file "+DESIGN_FILE+" does not exist")

df = pd.read_csv(DESIGN_FILE, sep="\t")
colnames = list(df.columns)
colnames[0] = colnames[0].lower()
df.columns = colnames

if not 'sampleid' in colnames: 
     sys.exit("Design file "+DESIGN_FILE+" does not contain << sampleid >> column")

if not df['sampleid'].dtype == 'O': 
     sys.exit("No numeric sample-id's allowed update designfile: "+DESIGN_FILE)
 
SAMPLES = [str(sample) for sample in list(set(df['sampleid']))]

FASTQS = [ os.path.join(FASTQ_STORE, s + ".fastq") for s in SAMPLES]


FASTQC_OUTDIR = os.path.join(RESULT_DIR,"fastqc")

FASTQC_OUT= [os.path.join(FASTQC_OUTDIR,s+"_fastqc","fastqc_report.html") for s in SAMPLES]


# By default fastQC is off remove the # in the "input" line of rule "all" to do FastQC on all samples
#  generate the fast_qc for a single sample with:  os.path.join(FASTQC_OUTDIR,"S01_fastqc","fastqc_report.html")

rule all:
    input: HTML_FILE  #,FASTQC_OUT
    message: "basic QC done!"

rule fast_qc:
       input: fq=FASTQ_STORE+"{s}.fastq",
              outdir=FASTQC_OUTDIR+"/"+DIR_E
       output: FASTQC_OUTDIR+"{s}_fastqc/fastqc_report.html"
       message: "Generating fastqc report for sample {wildcards.s}"
       shell: "fastqc  -o {FASTQC_OUTDIR} {input.fq}"

rule bootstrap:
    input: MD_FILE
    output: HTML_FILE
    message: "Bootstraping report"
    script: "bootstrap.R"

rule knit:
    input: fqs=FASTQS,
           design_file=DESIGN_FILE
    output: md=MD_FILE
    params: knit_figdir=KNIT_FIGDIR,
            fastq_store=FASTQ_STORE,
            result_dir=RESULT_DIR,
            rmd_file=RMD_FILE
    message: "Knitting report"
    script: "knit.R"  

rule get_fq:
    input: DESIGN_FILE
    output: FASTQS
    message: "Importing fastq from bam"
    shell: "python get_experiment_fq.py -d {DESIGN_FILE} -a {FASTQ_STORE}"

rule create_dir:
    output:  os.path.join("{s}",DIR_E)
    message: "Create directory {wildcards.s}"
    shell:   "mkdir -p {wildcards.s}; touch {output} "
